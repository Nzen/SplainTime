/*
 * This file is generated by jOOQ.
 */
package ws.nzen.tracking.splaintime.dao.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;

import ws.nzen.tracking.splaintime.dao.jooq.tables.StRecordingDeviceType;


/**
 * Computer; phone
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StRecordingDeviceTypeRecord extends UpdatableRecordImpl<StRecordingDeviceTypeRecord> implements Record2<Integer, String> {

    private static final long serialVersionUID = 844766889;

    /**
     * Setter for <code>PUBLIC.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_ID</code>.
     */
    public void setRecordingDeviceTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_ID</code>.
     */
    public Integer getRecordingDeviceTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_DESC</code>.
     */
    public void setRecordingDeviceTypeDesc(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_DESC</code>.
     */
    public String getRecordingDeviceTypeDesc() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row2<Integer, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    @Override
    public Row2<Integer, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_ID;
    }

    @Override
    public Field<String> field2() {
        return StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_DESC;
    }

    @Override
    public Integer component1() {
        return getRecordingDeviceTypeId();
    }

    @Override
    public String component2() {
        return getRecordingDeviceTypeDesc();
    }

    @Override
    public Integer value1() {
        return getRecordingDeviceTypeId();
    }

    @Override
    public String value2() {
        return getRecordingDeviceTypeDesc();
    }

    @Override
    public StRecordingDeviceTypeRecord value1(Integer value) {
        setRecordingDeviceTypeId(value);
        return this;
    }

    @Override
    public StRecordingDeviceTypeRecord value2(String value) {
        setRecordingDeviceTypeDesc(value);
        return this;
    }

    @Override
    public StRecordingDeviceTypeRecord values(Integer value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StRecordingDeviceTypeRecord
     */
    public StRecordingDeviceTypeRecord() {
        super(StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE);
    }

    /**
     * Create a detached, initialised StRecordingDeviceTypeRecord
     */
    public StRecordingDeviceTypeRecord(Integer recordingDeviceTypeId, String recordingDeviceTypeDesc) {
        super(StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE);

        set(0, recordingDeviceTypeId);
        set(1, recordingDeviceTypeDesc);
    }
}
