/*
 * This file is generated by jOOQ.
 */
package ws.nzen.tracking.splaintime.dao.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import ws.nzen.tracking.splaintime.dao.jooq.tables.StConfiguration;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StConfigurationRecord;


/**
 * Arbitrary attributes for the runtime
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StConfigurationDao extends DAOImpl<StConfigurationRecord, ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration, Integer> {

    /**
     * Create a new StConfigurationDao without any configuration
     */
    public StConfigurationDao() {
        super(StConfiguration.ST_CONFIGURATION, ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration.class);
    }

    /**
     * Create a new StConfigurationDao with an attached configuration
     */
    public StConfigurationDao(Configuration configuration) {
        super(StConfiguration.ST_CONFIGURATION, ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration.class, configuration);
    }

    @Override
    public Integer getId(ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration object) {
        return object.getConfigurationId();
    }

    /**
     * Fetch records that have <code>CONFIGURATION_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchRangeOfConfigurationId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StConfiguration.ST_CONFIGURATION.CONFIGURATION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CONFIGURATION_ID IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchByConfigurationId(Integer... values) {
        return fetch(StConfiguration.ST_CONFIGURATION.CONFIGURATION_ID, values);
    }

    /**
     * Fetch a unique record that has <code>CONFIGURATION_ID = value</code>
     */
    public ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration fetchOneByConfigurationId(Integer value) {
        return fetchOne(StConfiguration.ST_CONFIGURATION.CONFIGURATION_ID, value);
    }

    /**
     * Fetch records that have <code>CONFIGURATION_DESC BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchRangeOfConfigurationDesc(String lowerInclusive, String upperInclusive) {
        return fetchRange(StConfiguration.ST_CONFIGURATION.CONFIGURATION_DESC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CONFIGURATION_DESC IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchByConfigurationDesc(String... values) {
        return fetch(StConfiguration.ST_CONFIGURATION.CONFIGURATION_DESC, values);
    }

    /**
     * Fetch records that have <code>TYPE_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchRangeOfTypeId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StConfiguration.ST_CONFIGURATION.TYPE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TYPE_ID IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchByTypeId(Integer... values) {
        return fetch(StConfiguration.ST_CONFIGURATION.TYPE_ID, values);
    }

    /**
     * Fetch records that have <code>RECORDING_DEVICE_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchRangeOfRecordingDeviceId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StConfiguration.ST_CONFIGURATION.RECORDING_DEVICE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RECORDING_DEVICE_ID IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchByRecordingDeviceId(Integer... values) {
        return fetch(StConfiguration.ST_CONFIGURATION.RECORDING_DEVICE_ID, values);
    }

    /**
     * Fetch records that have <code>TEXTUAL_VALUE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchRangeOfTextualValue(String lowerInclusive, String upperInclusive) {
        return fetchRange(StConfiguration.ST_CONFIGURATION.TEXTUAL_VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>TEXTUAL_VALUE IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchByTextualValue(String... values) {
        return fetch(StConfiguration.ST_CONFIGURATION.TEXTUAL_VALUE, values);
    }

    /**
     * Fetch records that have <code>INTEGRAL_VALUE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchRangeOfIntegralValue(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StConfiguration.ST_CONFIGURATION.INTEGRAL_VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>INTEGRAL_VALUE IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchByIntegralValue(Integer... values) {
        return fetch(StConfiguration.ST_CONFIGURATION.INTEGRAL_VALUE, values);
    }

    /**
     * Fetch records that have <code>BINARY_VALUE BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchRangeOfBinaryValue(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(StConfiguration.ST_CONFIGURATION.BINARY_VALUE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>BINARY_VALUE IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StConfiguration> fetchByBinaryValue(Boolean... values) {
        return fetch(StConfiguration.ST_CONFIGURATION.BINARY_VALUE, values);
    }
}
