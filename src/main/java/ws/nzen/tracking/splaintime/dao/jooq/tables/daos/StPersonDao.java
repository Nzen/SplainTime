/*
 * This file is generated by jOOQ.
 */
package ws.nzen.tracking.splaintime.dao.jooq.tables.daos;


import java.time.OffsetDateTime;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import ws.nzen.tracking.splaintime.dao.jooq.tables.StPerson;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StPersonRecord;


/**
 * ST only expects one, but thats fine
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StPersonDao extends DAOImpl<StPersonRecord, ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson, Integer> {

    /**
     * Create a new StPersonDao without any configuration
     */
    public StPersonDao() {
        super(StPerson.ST_PERSON, ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson.class);
    }

    /**
     * Create a new StPersonDao with an attached configuration
     */
    public StPersonDao(Configuration configuration) {
        super(StPerson.ST_PERSON, ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson.class, configuration);
    }

    @Override
    public Integer getId(ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson object) {
        return object.getPersonId();
    }

    /**
     * Fetch records that have <code>PERSON_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchRangeOfPersonId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StPerson.ST_PERSON.PERSON_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PERSON_ID IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchByPersonId(Integer... values) {
        return fetch(StPerson.ST_PERSON.PERSON_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PERSON_ID = value</code>
     */
    public ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson fetchOneByPersonId(Integer value) {
        return fetchOne(StPerson.ST_PERSON.PERSON_ID, value);
    }

    /**
     * Fetch records that have <code>PERSON_DESC BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchRangeOfPersonDesc(String lowerInclusive, String upperInclusive) {
        return fetchRange(StPerson.ST_PERSON.PERSON_DESC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PERSON_DESC IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchByPersonDesc(String... values) {
        return fetch(StPerson.ST_PERSON.PERSON_DESC, values);
    }

    /**
     * Fetch records that have <code>PASSWORD_HASH BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchRangeOfPasswordHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(StPerson.ST_PERSON.PASSWORD_HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PASSWORD_HASH IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchByPasswordHash(String... values) {
        return fetch(StPerson.ST_PERSON.PASSWORD_HASH, values);
    }

    /**
     * Fetch records that have <code>PASSWORD_SALT BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchRangeOfPasswordSalt(String lowerInclusive, String upperInclusive) {
        return fetchRange(StPerson.ST_PERSON.PASSWORD_SALT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PASSWORD_SALT IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchByPasswordSalt(String... values) {
        return fetch(StPerson.ST_PERSON.PASSWORD_SALT, values);
    }

    /**
     * Fetch records that have <code>HASHING_ALGORITHM_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchRangeOfHashingAlgorithmId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StPerson.ST_PERSON.HASHING_ALGORITHM_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>HASHING_ALGORITHM_ID IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchByHashingAlgorithmId(Integer... values) {
        return fetch(StPerson.ST_PERSON.HASHING_ALGORITHM_ID, values);
    }

    /**
     * Fetch records that have <code>ADDED_WHEN BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchRangeOfAddedWhen(OffsetDateTime lowerInclusive, OffsetDateTime upperInclusive) {
        return fetchRange(StPerson.ST_PERSON.ADDED_WHEN, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>ADDED_WHEN IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StPerson> fetchByAddedWhen(OffsetDateTime... values) {
        return fetch(StPerson.ST_PERSON.ADDED_WHEN, values);
    }
}
