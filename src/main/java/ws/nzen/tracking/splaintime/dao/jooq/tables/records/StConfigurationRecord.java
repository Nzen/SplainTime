/*
 * This file is generated by jOOQ.
 */
package ws.nzen.tracking.splaintime.dao.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;

import ws.nzen.tracking.splaintime.dao.jooq.tables.StConfiguration;
import ws.nzen.tracking.splaintime.dao.jooq.tables.interfaces.IStConfiguration;


/**
 * Arbitrary attributes for the runtime
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StConfigurationRecord extends UpdatableRecordImpl<StConfigurationRecord> implements Record7<Integer, String, Integer, Integer, String, Integer, Boolean>, IStConfiguration {

    private static final long serialVersionUID = -1178518130;

    /**
     * Setter for <code>PUBLIC.ST_CONFIGURATION.CONFIGURATION_ID</code>.
     */
    @Override
    public void setConfigurationId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_CONFIGURATION.CONFIGURATION_ID</code>.
     */
    @Override
    public Integer getConfigurationId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ST_CONFIGURATION.CONFIGURATION_DESC</code>.
     */
    @Override
    public void setConfigurationDesc(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_CONFIGURATION.CONFIGURATION_DESC</code>.
     */
    @Override
    public String getConfigurationDesc() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.ST_CONFIGURATION.TYPE_ID</code>. fk; redundant
     */
    @Override
    public void setTypeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_CONFIGURATION.TYPE_ID</code>. fk; redundant
     */
    @Override
    public Integer getTypeId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>PUBLIC.ST_CONFIGURATION.RECORDING_DEVICE_ID</code>. fk; ex to enable an easier undo string on a phone
     */
    @Override
    public void setRecordingDeviceId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_CONFIGURATION.RECORDING_DEVICE_ID</code>. fk; ex to enable an easier undo string on a phone
     */
    @Override
    public Integer getRecordingDeviceId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>PUBLIC.ST_CONFIGURATION.TEXTUAL_VALUE</code>. Large, in case ST allows custom datetime format
     */
    @Override
    public void setTextualValue(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_CONFIGURATION.TEXTUAL_VALUE</code>. Large, in case ST allows custom datetime format
     */
    @Override
    public String getTextualValue() {
        return (String) get(4);
    }

    /**
     * Setter for <code>PUBLIC.ST_CONFIGURATION.INTEGRAL_VALUE</code>.
     */
    @Override
    public void setIntegralValue(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_CONFIGURATION.INTEGRAL_VALUE</code>.
     */
    @Override
    public Integer getIntegralValue() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>PUBLIC.ST_CONFIGURATION.BINARY_VALUE</code>.
     */
    @Override
    public void setBinaryValue(Boolean value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_CONFIGURATION.BINARY_VALUE</code>.
     */
    @Override
    public Boolean getBinaryValue() {
        return (Boolean) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, Integer, Integer, String, Integer, Boolean> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, Integer, Integer, String, Integer, Boolean> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return StConfiguration.ST_CONFIGURATION.CONFIGURATION_ID;
    }

    @Override
    public Field<String> field2() {
        return StConfiguration.ST_CONFIGURATION.CONFIGURATION_DESC;
    }

    @Override
    public Field<Integer> field3() {
        return StConfiguration.ST_CONFIGURATION.TYPE_ID;
    }

    @Override
    public Field<Integer> field4() {
        return StConfiguration.ST_CONFIGURATION.RECORDING_DEVICE_ID;
    }

    @Override
    public Field<String> field5() {
        return StConfiguration.ST_CONFIGURATION.TEXTUAL_VALUE;
    }

    @Override
    public Field<Integer> field6() {
        return StConfiguration.ST_CONFIGURATION.INTEGRAL_VALUE;
    }

    @Override
    public Field<Boolean> field7() {
        return StConfiguration.ST_CONFIGURATION.BINARY_VALUE;
    }

    @Override
    public Integer component1() {
        return getConfigurationId();
    }

    @Override
    public String component2() {
        return getConfigurationDesc();
    }

    @Override
    public Integer component3() {
        return getTypeId();
    }

    @Override
    public Integer component4() {
        return getRecordingDeviceId();
    }

    @Override
    public String component5() {
        return getTextualValue();
    }

    @Override
    public Integer component6() {
        return getIntegralValue();
    }

    @Override
    public Boolean component7() {
        return getBinaryValue();
    }

    @Override
    public Integer value1() {
        return getConfigurationId();
    }

    @Override
    public String value2() {
        return getConfigurationDesc();
    }

    @Override
    public Integer value3() {
        return getTypeId();
    }

    @Override
    public Integer value4() {
        return getRecordingDeviceId();
    }

    @Override
    public String value5() {
        return getTextualValue();
    }

    @Override
    public Integer value6() {
        return getIntegralValue();
    }

    @Override
    public Boolean value7() {
        return getBinaryValue();
    }

    @Override
    public StConfigurationRecord value1(Integer value) {
        setConfigurationId(value);
        return this;
    }

    @Override
    public StConfigurationRecord value2(String value) {
        setConfigurationDesc(value);
        return this;
    }

    @Override
    public StConfigurationRecord value3(Integer value) {
        setTypeId(value);
        return this;
    }

    @Override
    public StConfigurationRecord value4(Integer value) {
        setRecordingDeviceId(value);
        return this;
    }

    @Override
    public StConfigurationRecord value5(String value) {
        setTextualValue(value);
        return this;
    }

    @Override
    public StConfigurationRecord value6(Integer value) {
        setIntegralValue(value);
        return this;
    }

    @Override
    public StConfigurationRecord value7(Boolean value) {
        setBinaryValue(value);
        return this;
    }

    @Override
    public StConfigurationRecord values(Integer value1, String value2, Integer value3, Integer value4, String value5, Integer value6, Boolean value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IStConfiguration from) {
        setConfigurationId(from.getConfigurationId());
        setConfigurationDesc(from.getConfigurationDesc());
        setTypeId(from.getTypeId());
        setRecordingDeviceId(from.getRecordingDeviceId());
        setTextualValue(from.getTextualValue());
        setIntegralValue(from.getIntegralValue());
        setBinaryValue(from.getBinaryValue());
    }

    @Override
    public <E extends IStConfiguration> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StConfigurationRecord
     */
    public StConfigurationRecord() {
        super(StConfiguration.ST_CONFIGURATION);
    }

    /**
     * Create a detached, initialised StConfigurationRecord
     */
    public StConfigurationRecord(Integer configurationId, String configurationDesc, Integer typeId, Integer recordingDeviceId, String textualValue, Integer integralValue, Boolean binaryValue) {
        super(StConfiguration.ST_CONFIGURATION);

        set(0, configurationId);
        set(1, configurationDesc);
        set(2, typeId);
        set(3, recordingDeviceId);
        set(4, textualValue);
        set(5, integralValue);
        set(6, binaryValue);
    }
}
