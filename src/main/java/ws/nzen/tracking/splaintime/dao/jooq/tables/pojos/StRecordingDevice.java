/*
 * This file is generated by jOOQ.
 */
package ws.nzen.tracking.splaintime.dao.jooq.tables.pojos;


import javax.annotation.Generated;

import ws.nzen.tracking.splaintime.dao.jooq.tables.interfaces.IStRecordingDevice;


/**
 * For representing the pc, phone that recorded tags
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StRecordingDevice implements IStRecordingDevice {

    private static final long serialVersionUID = -2085109820;

    private Integer recordingDeviceId;
    private String  recordingDeviceDesc;
    private Integer recordingDeviceTypeId;
    private String  homeDirGuid;
    private String  ipv4Address;

    public StRecordingDevice() {}

    public StRecordingDevice(IStRecordingDevice value) {
        this.recordingDeviceId = value.getRecordingDeviceId();
        this.recordingDeviceDesc = value.getRecordingDeviceDesc();
        this.recordingDeviceTypeId = value.getRecordingDeviceTypeId();
        this.homeDirGuid = value.getHomeDirGuid();
        this.ipv4Address = value.getIpv4Address();
    }

    public StRecordingDevice(
        Integer recordingDeviceId,
        String  recordingDeviceDesc,
        Integer recordingDeviceTypeId,
        String  homeDirGuid,
        String  ipv4Address
    ) {
        this.recordingDeviceId = recordingDeviceId;
        this.recordingDeviceDesc = recordingDeviceDesc;
        this.recordingDeviceTypeId = recordingDeviceTypeId;
        this.homeDirGuid = homeDirGuid;
        this.ipv4Address = ipv4Address;
    }

    @Override
    public Integer getRecordingDeviceId() {
        return this.recordingDeviceId;
    }

    @Override
    public void setRecordingDeviceId(Integer recordingDeviceId) {
        this.recordingDeviceId = recordingDeviceId;
    }

    @Override
    public String getRecordingDeviceDesc() {
        return this.recordingDeviceDesc;
    }

    @Override
    public void setRecordingDeviceDesc(String recordingDeviceDesc) {
        this.recordingDeviceDesc = recordingDeviceDesc;
    }

    @Override
    public Integer getRecordingDeviceTypeId() {
        return this.recordingDeviceTypeId;
    }

    @Override
    public void setRecordingDeviceTypeId(Integer recordingDeviceTypeId) {
        this.recordingDeviceTypeId = recordingDeviceTypeId;
    }

    @Override
    public String getHomeDirGuid() {
        return this.homeDirGuid;
    }

    @Override
    public void setHomeDirGuid(String homeDirGuid) {
        this.homeDirGuid = homeDirGuid;
    }

    @Override
    public String getIpv4Address() {
        return this.ipv4Address;
    }

    @Override
    public void setIpv4Address(String ipv4Address) {
        this.ipv4Address = ipv4Address;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("StRecordingDevice (");

        sb.append(recordingDeviceId);
        sb.append(", ").append(recordingDeviceDesc);
        sb.append(", ").append(recordingDeviceTypeId);
        sb.append(", ").append(homeDirGuid);
        sb.append(", ").append(ipv4Address);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IStRecordingDevice from) {
        setRecordingDeviceId(from.getRecordingDeviceId());
        setRecordingDeviceDesc(from.getRecordingDeviceDesc());
        setRecordingDeviceTypeId(from.getRecordingDeviceTypeId());
        setHomeDirGuid(from.getHomeDirGuid());
        setIpv4Address(from.getIpv4Address());
    }

    @Override
    public <E extends IStRecordingDevice> E into(E into) {
        into.from(this);
        return into;
    }
}
