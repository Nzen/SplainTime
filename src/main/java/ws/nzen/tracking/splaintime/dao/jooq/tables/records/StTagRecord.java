/*
 * This file is generated by jOOQ.
 */
package ws.nzen.tracking.splaintime.dao.jooq.tables.records;


import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ws.nzen.tracking.splaintime.dao.jooq.tables.StTag;


/**
 * The user entered text about what happened during that time
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StTagRecord extends UpdatableRecordImpl<StTagRecord> implements Record6<Integer, OffsetDateTime, OffsetDateTime, Integer, Integer, String> {

    private static final long serialVersionUID = -1546640296;

    /**
     * Setter for <code>PUBLIC.ST_TAG.TAG_ID</code>.
     */
    public void setTagId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_TAG.TAG_ID</code>.
     */
    public Integer getTagId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ST_TAG.RECORDED_WHEN</code>. ASK is this the resolved date or only when entered
     */
    public void setRecordedWhen(OffsetDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_TAG.RECORDED_WHEN</code>. ASK is this the resolved date or only when entered
     */
    public OffsetDateTime getRecordedWhen() {
        return (OffsetDateTime) get(1);
    }

    /**
     * Setter for <code>PUBLIC.ST_TAG.ADJUSTED_WHEN</code>. ASK is this null when not adjusted
     */
    public void setAdjustedWhen(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_TAG.ADJUSTED_WHEN</code>. ASK is this null when not adjusted
     */
    public OffsetDateTime getAdjustedWhen() {
        return (OffsetDateTime) get(2);
    }

    /**
     * Setter for <code>PUBLIC.ST_TAG.RECORDING_DEVICE_ID</code>. fk
     */
    public void setRecordingDeviceId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_TAG.RECORDING_DEVICE_ID</code>. fk
     */
    public Integer getRecordingDeviceId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>PUBLIC.ST_TAG.PERSON_ID</code>. fk
     */
    public void setPersonId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_TAG.PERSON_ID</code>. fk
     */
    public Integer getPersonId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>PUBLIC.ST_TAG.TAG_VALUE</code>.
     */
    public void setTagValue(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_TAG.TAG_VALUE</code>.
     */
    public String getTagValue() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, OffsetDateTime, OffsetDateTime, Integer, Integer, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, OffsetDateTime, OffsetDateTime, Integer, Integer, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return StTag.ST_TAG.TAG_ID;
    }

    @Override
    public Field<OffsetDateTime> field2() {
        return StTag.ST_TAG.RECORDED_WHEN;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return StTag.ST_TAG.ADJUSTED_WHEN;
    }

    @Override
    public Field<Integer> field4() {
        return StTag.ST_TAG.RECORDING_DEVICE_ID;
    }

    @Override
    public Field<Integer> field5() {
        return StTag.ST_TAG.PERSON_ID;
    }

    @Override
    public Field<String> field6() {
        return StTag.ST_TAG.TAG_VALUE;
    }

    @Override
    public Integer component1() {
        return getTagId();
    }

    @Override
    public OffsetDateTime component2() {
        return getRecordedWhen();
    }

    @Override
    public OffsetDateTime component3() {
        return getAdjustedWhen();
    }

    @Override
    public Integer component4() {
        return getRecordingDeviceId();
    }

    @Override
    public Integer component5() {
        return getPersonId();
    }

    @Override
    public String component6() {
        return getTagValue();
    }

    @Override
    public Integer value1() {
        return getTagId();
    }

    @Override
    public OffsetDateTime value2() {
        return getRecordedWhen();
    }

    @Override
    public OffsetDateTime value3() {
        return getAdjustedWhen();
    }

    @Override
    public Integer value4() {
        return getRecordingDeviceId();
    }

    @Override
    public Integer value5() {
        return getPersonId();
    }

    @Override
    public String value6() {
        return getTagValue();
    }

    @Override
    public StTagRecord value1(Integer value) {
        setTagId(value);
        return this;
    }

    @Override
    public StTagRecord value2(OffsetDateTime value) {
        setRecordedWhen(value);
        return this;
    }

    @Override
    public StTagRecord value3(OffsetDateTime value) {
        setAdjustedWhen(value);
        return this;
    }

    @Override
    public StTagRecord value4(Integer value) {
        setRecordingDeviceId(value);
        return this;
    }

    @Override
    public StTagRecord value5(Integer value) {
        setPersonId(value);
        return this;
    }

    @Override
    public StTagRecord value6(String value) {
        setTagValue(value);
        return this;
    }

    @Override
    public StTagRecord values(Integer value1, OffsetDateTime value2, OffsetDateTime value3, Integer value4, Integer value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StTagRecord
     */
    public StTagRecord() {
        super(StTag.ST_TAG);
    }

    /**
     * Create a detached, initialised StTagRecord
     */
    public StTagRecord(Integer tagId, OffsetDateTime recordedWhen, OffsetDateTime adjustedWhen, Integer recordingDeviceId, Integer personId, String tagValue) {
        super(StTag.ST_TAG);

        set(0, tagId);
        set(1, recordedWhen);
        set(2, adjustedWhen);
        set(3, recordingDeviceId);
        set(4, personId);
        set(5, tagValue);
    }
}
