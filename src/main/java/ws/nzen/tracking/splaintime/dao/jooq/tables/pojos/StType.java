/*
 * This file is generated by jOOQ.
 */
package ws.nzen.tracking.splaintime.dao.jooq.tables.pojos;


import javax.annotation.Generated;

import ws.nzen.tracking.splaintime.dao.jooq.tables.interfaces.IStType;


/**
 * Descriptions that dont need type checking
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StType implements IStType {

    private static final long serialVersionUID = -775493736;

    private Integer typeId;
    private String  typeDesc;
    private Integer ownType;

    public StType() {}

    public StType(IStType value) {
        this.typeId = value.getTypeId();
        this.typeDesc = value.getTypeDesc();
        this.ownType = value.getOwnType();
    }

    public StType(
        Integer typeId,
        String  typeDesc,
        Integer ownType
    ) {
        this.typeId = typeId;
        this.typeDesc = typeDesc;
        this.ownType = ownType;
    }

    @Override
    public Integer getTypeId() {
        return this.typeId;
    }

    @Override
    public void setTypeId(Integer typeId) {
        this.typeId = typeId;
    }

    @Override
    public String getTypeDesc() {
        return this.typeDesc;
    }

    @Override
    public void setTypeDesc(String typeDesc) {
        this.typeDesc = typeDesc;
    }

    @Override
    public Integer getOwnType() {
        return this.ownType;
    }

    @Override
    public void setOwnType(Integer ownType) {
        this.ownType = ownType;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("StType (");

        sb.append(typeId);
        sb.append(", ").append(typeDesc);
        sb.append(", ").append(ownType);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IStType from) {
        setTypeId(from.getTypeId());
        setTypeDesc(from.getTypeDesc());
        setOwnType(from.getOwnType());
    }

    @Override
    public <E extends IStType> E into(E into) {
        into.from(this);
        return into;
    }
}
