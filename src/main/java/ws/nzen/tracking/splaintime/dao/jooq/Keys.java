/*
 * This file is generated by jOOQ.
 */
package ws.nzen.tracking.splaintime.dao.jooq;


import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import ws.nzen.tracking.splaintime.dao.jooq.tables.Databasechangeloglock;
import ws.nzen.tracking.splaintime.dao.jooq.tables.StCategory;
import ws.nzen.tracking.splaintime.dao.jooq.tables.StConfiguration;
import ws.nzen.tracking.splaintime.dao.jooq.tables.StHashingAlgorithm;
import ws.nzen.tracking.splaintime.dao.jooq.tables.StPerson;
import ws.nzen.tracking.splaintime.dao.jooq.tables.StRecordingDevice;
import ws.nzen.tracking.splaintime.dao.jooq.tables.StRecordingDeviceType;
import ws.nzen.tracking.splaintime.dao.jooq.tables.StTag;
import ws.nzen.tracking.splaintime.dao.jooq.tables.StTagCategory;
import ws.nzen.tracking.splaintime.dao.jooq.tables.StType;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.DatabasechangeloglockRecord;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StCategoryRecord;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StConfigurationRecord;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StHashingAlgorithmRecord;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StPersonRecord;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StRecordingDeviceRecord;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StRecordingDeviceTypeRecord;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StTagCategoryRecord;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StTagRecord;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StTypeRecord;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>PUBLIC</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<StCategoryRecord, Integer> IDENTITY_ST_CATEGORY = Identities0.IDENTITY_ST_CATEGORY;
    public static final Identity<StConfigurationRecord, Integer> IDENTITY_ST_CONFIGURATION = Identities0.IDENTITY_ST_CONFIGURATION;
    public static final Identity<StHashingAlgorithmRecord, Integer> IDENTITY_ST_HASHING_ALGORITHM = Identities0.IDENTITY_ST_HASHING_ALGORITHM;
    public static final Identity<StPersonRecord, Integer> IDENTITY_ST_PERSON = Identities0.IDENTITY_ST_PERSON;
    public static final Identity<StRecordingDeviceRecord, Integer> IDENTITY_ST_RECORDING_DEVICE = Identities0.IDENTITY_ST_RECORDING_DEVICE;
    public static final Identity<StRecordingDeviceTypeRecord, Integer> IDENTITY_ST_RECORDING_DEVICE_TYPE = Identities0.IDENTITY_ST_RECORDING_DEVICE_TYPE;
    public static final Identity<StTagRecord, Integer> IDENTITY_ST_TAG = Identities0.IDENTITY_ST_TAG;
    public static final Identity<StTypeRecord, Integer> IDENTITY_ST_TYPE = Identities0.IDENTITY_ST_TYPE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<DatabasechangeloglockRecord> PK_DATABASECHANGELOGLOCK = UniqueKeys0.PK_DATABASECHANGELOGLOCK;
    public static final UniqueKey<StCategoryRecord> PK_ST_CATEGORY = UniqueKeys0.PK_ST_CATEGORY;
    public static final UniqueKey<StConfigurationRecord> PK_ST_CONFIGURATION = UniqueKeys0.PK_ST_CONFIGURATION;
    public static final UniqueKey<StHashingAlgorithmRecord> PK_ST_HASHING_ALGORITHM = UniqueKeys0.PK_ST_HASHING_ALGORITHM;
    public static final UniqueKey<StPersonRecord> PK_ST_PERSON = UniqueKeys0.PK_ST_PERSON;
    public static final UniqueKey<StRecordingDeviceRecord> PK_ST_RECORDING_DEVICE = UniqueKeys0.PK_ST_RECORDING_DEVICE;
    public static final UniqueKey<StRecordingDeviceTypeRecord> PK_ST_RECORDING_DEVICE_TYPE = UniqueKeys0.PK_ST_RECORDING_DEVICE_TYPE;
    public static final UniqueKey<StTagRecord> PK_ST_TAG = UniqueKeys0.PK_ST_TAG;
    public static final UniqueKey<StTagCategoryRecord> TAGCATEGORY_PK = UniqueKeys0.TAGCATEGORY_PK;
    public static final UniqueKey<StTypeRecord> PK_ST_TYPE = UniqueKeys0.PK_ST_TYPE;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<StCategoryRecord, StTypeRecord> CATEGORY_FK_TYPE = ForeignKeys0.CATEGORY_FK_TYPE;
    public static final ForeignKey<StCategoryRecord, StCategoryRecord> CATEGORY_FK_CATEGORY = ForeignKeys0.CATEGORY_FK_CATEGORY;
    public static final ForeignKey<StConfigurationRecord, StTypeRecord> CONFIGURATION_FK_TYPE = ForeignKeys0.CONFIGURATION_FK_TYPE;
    public static final ForeignKey<StConfigurationRecord, StRecordingDeviceRecord> CONFIGURATION_FK_RECDEVICE = ForeignKeys0.CONFIGURATION_FK_RECDEVICE;
    public static final ForeignKey<StPersonRecord, StHashingAlgorithmRecord> PERSON_FK_HASH = ForeignKeys0.PERSON_FK_HASH;
    public static final ForeignKey<StRecordingDeviceRecord, StRecordingDeviceTypeRecord> RECDEVICE_FK_RECDEVICE_TYPE = ForeignKeys0.RECDEVICE_FK_RECDEVICE_TYPE;
    public static final ForeignKey<StTagRecord, StRecordingDeviceRecord> TAG_FK_RECDEVICE = ForeignKeys0.TAG_FK_RECDEVICE;
    public static final ForeignKey<StTagRecord, StPersonRecord> TAG_FK_PERSON = ForeignKeys0.TAG_FK_PERSON;
    public static final ForeignKey<StTagCategoryRecord, StTagRecord> TAGCATEGORY_FK_TAG = ForeignKeys0.TAGCATEGORY_FK_TAG;
    public static final ForeignKey<StTagCategoryRecord, StCategoryRecord> TAGCATEGORY_FK_CATEGORY = ForeignKeys0.TAGCATEGORY_FK_CATEGORY;
    public static final ForeignKey<StTypeRecord, StTypeRecord> TYPE_FK_TYPE_RECUR = ForeignKeys0.TYPE_FK_TYPE_RECUR;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<StCategoryRecord, Integer> IDENTITY_ST_CATEGORY = Internal.createIdentity(StCategory.ST_CATEGORY, StCategory.ST_CATEGORY.CATEGORY_ID);
        public static Identity<StConfigurationRecord, Integer> IDENTITY_ST_CONFIGURATION = Internal.createIdentity(StConfiguration.ST_CONFIGURATION, StConfiguration.ST_CONFIGURATION.CONFIGURATION_ID);
        public static Identity<StHashingAlgorithmRecord, Integer> IDENTITY_ST_HASHING_ALGORITHM = Internal.createIdentity(StHashingAlgorithm.ST_HASHING_ALGORITHM, StHashingAlgorithm.ST_HASHING_ALGORITHM.HASHING_ALGORITHM_ID);
        public static Identity<StPersonRecord, Integer> IDENTITY_ST_PERSON = Internal.createIdentity(StPerson.ST_PERSON, StPerson.ST_PERSON.PERSON_ID);
        public static Identity<StRecordingDeviceRecord, Integer> IDENTITY_ST_RECORDING_DEVICE = Internal.createIdentity(StRecordingDevice.ST_RECORDING_DEVICE, StRecordingDevice.ST_RECORDING_DEVICE.RECORDING_DEVICE_ID);
        public static Identity<StRecordingDeviceTypeRecord, Integer> IDENTITY_ST_RECORDING_DEVICE_TYPE = Internal.createIdentity(StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE, StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_ID);
        public static Identity<StTagRecord, Integer> IDENTITY_ST_TAG = Internal.createIdentity(StTag.ST_TAG, StTag.ST_TAG.TAG_ID);
        public static Identity<StTypeRecord, Integer> IDENTITY_ST_TYPE = Internal.createIdentity(StType.ST_TYPE, StType.ST_TYPE.TYPE_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<DatabasechangeloglockRecord> PK_DATABASECHANGELOGLOCK = Internal.createUniqueKey(Databasechangeloglock.DATABASECHANGELOGLOCK, "PK_DATABASECHANGELOGLOCK", Databasechangeloglock.DATABASECHANGELOGLOCK.ID);
        public static final UniqueKey<StCategoryRecord> PK_ST_CATEGORY = Internal.createUniqueKey(StCategory.ST_CATEGORY, "PK_ST_CATEGORY", StCategory.ST_CATEGORY.CATEGORY_ID);
        public static final UniqueKey<StConfigurationRecord> PK_ST_CONFIGURATION = Internal.createUniqueKey(StConfiguration.ST_CONFIGURATION, "PK_ST_CONFIGURATION", StConfiguration.ST_CONFIGURATION.CONFIGURATION_ID);
        public static final UniqueKey<StHashingAlgorithmRecord> PK_ST_HASHING_ALGORITHM = Internal.createUniqueKey(StHashingAlgorithm.ST_HASHING_ALGORITHM, "PK_ST_HASHING_ALGORITHM", StHashingAlgorithm.ST_HASHING_ALGORITHM.HASHING_ALGORITHM_ID);
        public static final UniqueKey<StPersonRecord> PK_ST_PERSON = Internal.createUniqueKey(StPerson.ST_PERSON, "PK_ST_PERSON", StPerson.ST_PERSON.PERSON_ID);
        public static final UniqueKey<StRecordingDeviceRecord> PK_ST_RECORDING_DEVICE = Internal.createUniqueKey(StRecordingDevice.ST_RECORDING_DEVICE, "PK_ST_RECORDING_DEVICE", StRecordingDevice.ST_RECORDING_DEVICE.RECORDING_DEVICE_ID);
        public static final UniqueKey<StRecordingDeviceTypeRecord> PK_ST_RECORDING_DEVICE_TYPE = Internal.createUniqueKey(StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE, "PK_ST_RECORDING_DEVICE_TYPE", StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_ID);
        public static final UniqueKey<StTagRecord> PK_ST_TAG = Internal.createUniqueKey(StTag.ST_TAG, "PK_ST_TAG", StTag.ST_TAG.TAG_ID);
        public static final UniqueKey<StTagCategoryRecord> TAGCATEGORY_PK = Internal.createUniqueKey(StTagCategory.ST_TAG_CATEGORY, "TAGCATEGORY_PK", StTagCategory.ST_TAG_CATEGORY.TAG_ID, StTagCategory.ST_TAG_CATEGORY.CATEGORY_ID);
        public static final UniqueKey<StTypeRecord> PK_ST_TYPE = Internal.createUniqueKey(StType.ST_TYPE, "PK_ST_TYPE", StType.ST_TYPE.TYPE_ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<StCategoryRecord, StTypeRecord> CATEGORY_FK_TYPE = Internal.createForeignKey(ws.nzen.tracking.splaintime.dao.jooq.Keys.PK_ST_TYPE, StCategory.ST_CATEGORY, "CATEGORY_FK_TYPE", StCategory.ST_CATEGORY.TYPE_ID);
        public static final ForeignKey<StCategoryRecord, StCategoryRecord> CATEGORY_FK_CATEGORY = Internal.createForeignKey(ws.nzen.tracking.splaintime.dao.jooq.Keys.PK_ST_CATEGORY, StCategory.ST_CATEGORY, "CATEGORY_FK_CATEGORY", StCategory.ST_CATEGORY.PARENT_ID);
        public static final ForeignKey<StConfigurationRecord, StTypeRecord> CONFIGURATION_FK_TYPE = Internal.createForeignKey(ws.nzen.tracking.splaintime.dao.jooq.Keys.PK_ST_TYPE, StConfiguration.ST_CONFIGURATION, "CONFIGURATION_FK_TYPE", StConfiguration.ST_CONFIGURATION.TYPE_ID);
        public static final ForeignKey<StConfigurationRecord, StRecordingDeviceRecord> CONFIGURATION_FK_RECDEVICE = Internal.createForeignKey(ws.nzen.tracking.splaintime.dao.jooq.Keys.PK_ST_RECORDING_DEVICE, StConfiguration.ST_CONFIGURATION, "CONFIGURATION_FK_RECDEVICE", StConfiguration.ST_CONFIGURATION.RECORDING_DEVICE_ID);
        public static final ForeignKey<StPersonRecord, StHashingAlgorithmRecord> PERSON_FK_HASH = Internal.createForeignKey(ws.nzen.tracking.splaintime.dao.jooq.Keys.PK_ST_HASHING_ALGORITHM, StPerson.ST_PERSON, "PERSON_FK_HASH", StPerson.ST_PERSON.HASHING_ALGORITHM_ID);
        public static final ForeignKey<StRecordingDeviceRecord, StRecordingDeviceTypeRecord> RECDEVICE_FK_RECDEVICE_TYPE = Internal.createForeignKey(ws.nzen.tracking.splaintime.dao.jooq.Keys.PK_ST_RECORDING_DEVICE_TYPE, StRecordingDevice.ST_RECORDING_DEVICE, "RECDEVICE_FK_RECDEVICE_TYPE", StRecordingDevice.ST_RECORDING_DEVICE.RECORDING_DEVICE_TYPE_ID);
        public static final ForeignKey<StTagRecord, StRecordingDeviceRecord> TAG_FK_RECDEVICE = Internal.createForeignKey(ws.nzen.tracking.splaintime.dao.jooq.Keys.PK_ST_RECORDING_DEVICE, StTag.ST_TAG, "TAG_FK_RECDEVICE", StTag.ST_TAG.RECORDING_DEVICE_ID);
        public static final ForeignKey<StTagRecord, StPersonRecord> TAG_FK_PERSON = Internal.createForeignKey(ws.nzen.tracking.splaintime.dao.jooq.Keys.PK_ST_PERSON, StTag.ST_TAG, "TAG_FK_PERSON", StTag.ST_TAG.PERSON_ID);
        public static final ForeignKey<StTagCategoryRecord, StTagRecord> TAGCATEGORY_FK_TAG = Internal.createForeignKey(ws.nzen.tracking.splaintime.dao.jooq.Keys.PK_ST_TAG, StTagCategory.ST_TAG_CATEGORY, "TAGCATEGORY_FK_TAG", StTagCategory.ST_TAG_CATEGORY.TAG_ID);
        public static final ForeignKey<StTagCategoryRecord, StCategoryRecord> TAGCATEGORY_FK_CATEGORY = Internal.createForeignKey(ws.nzen.tracking.splaintime.dao.jooq.Keys.PK_ST_CATEGORY, StTagCategory.ST_TAG_CATEGORY, "TAGCATEGORY_FK_CATEGORY", StTagCategory.ST_TAG_CATEGORY.CATEGORY_ID);
        public static final ForeignKey<StTypeRecord, StTypeRecord> TYPE_FK_TYPE_RECUR = Internal.createForeignKey(ws.nzen.tracking.splaintime.dao.jooq.Keys.PK_ST_TYPE, StType.ST_TYPE, "TYPE_FK_TYPE_RECUR", StType.ST_TYPE.TYPE_ID);
    }
}
