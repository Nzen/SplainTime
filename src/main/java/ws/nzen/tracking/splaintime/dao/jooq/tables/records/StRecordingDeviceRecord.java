/*
 * This file is generated by jOOQ.
 */
package ws.nzen.tracking.splaintime.dao.jooq.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;

import ws.nzen.tracking.splaintime.dao.jooq.tables.StRecordingDevice;
import ws.nzen.tracking.splaintime.dao.jooq.tables.interfaces.IStRecordingDevice;


/**
 * For representing the pc, phone that recorded tags
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StRecordingDeviceRecord extends UpdatableRecordImpl<StRecordingDeviceRecord> implements Record5<Integer, String, Integer, String, String>, IStRecordingDevice {

    private static final long serialVersionUID = 1771027050;

    /**
     * Setter for <code>PUBLIC.ST_RECORDING_DEVICE.RECORDING_DEVICE_ID</code>.
     */
    @Override
    public void setRecordingDeviceId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_RECORDING_DEVICE.RECORDING_DEVICE_ID</code>.
     */
    @Override
    public Integer getRecordingDeviceId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>PUBLIC.ST_RECORDING_DEVICE.RECORDING_DEVICE_DESC</code>.
     */
    @Override
    public void setRecordingDeviceDesc(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_RECORDING_DEVICE.RECORDING_DEVICE_DESC</code>.
     */
    @Override
    public String getRecordingDeviceDesc() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.ST_RECORDING_DEVICE.RECORDING_DEVICE_TYPE_ID</code>. fk; assume pc
     */
    @Override
    public void setRecordingDeviceTypeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_RECORDING_DEVICE.RECORDING_DEVICE_TYPE_ID</code>. fk; assume pc
     */
    @Override
    public Integer getRecordingDeviceTypeId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>PUBLIC.ST_RECORDING_DEVICE.HOME_DIR_GUID</code>.
     */
    @Override
    public void setHomeDirGuid(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_RECORDING_DEVICE.HOME_DIR_GUID</code>.
     */
    @Override
    public String getHomeDirGuid() {
        return (String) get(3);
    }

    /**
     * Setter for <code>PUBLIC.ST_RECORDING_DEVICE.IPV4_ADDRESS</code>. as an assist to initial user identification
     */
    @Override
    public void setIpv4Address(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.ST_RECORDING_DEVICE.IPV4_ADDRESS</code>. as an assist to initial user identification
     */
    @Override
    public String getIpv4Address() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, Integer, String, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, String, Integer, String, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return StRecordingDevice.ST_RECORDING_DEVICE.RECORDING_DEVICE_ID;
    }

    @Override
    public Field<String> field2() {
        return StRecordingDevice.ST_RECORDING_DEVICE.RECORDING_DEVICE_DESC;
    }

    @Override
    public Field<Integer> field3() {
        return StRecordingDevice.ST_RECORDING_DEVICE.RECORDING_DEVICE_TYPE_ID;
    }

    @Override
    public Field<String> field4() {
        return StRecordingDevice.ST_RECORDING_DEVICE.HOME_DIR_GUID;
    }

    @Override
    public Field<String> field5() {
        return StRecordingDevice.ST_RECORDING_DEVICE.IPV4_ADDRESS;
    }

    @Override
    public Integer component1() {
        return getRecordingDeviceId();
    }

    @Override
    public String component2() {
        return getRecordingDeviceDesc();
    }

    @Override
    public Integer component3() {
        return getRecordingDeviceTypeId();
    }

    @Override
    public String component4() {
        return getHomeDirGuid();
    }

    @Override
    public String component5() {
        return getIpv4Address();
    }

    @Override
    public Integer value1() {
        return getRecordingDeviceId();
    }

    @Override
    public String value2() {
        return getRecordingDeviceDesc();
    }

    @Override
    public Integer value3() {
        return getRecordingDeviceTypeId();
    }

    @Override
    public String value4() {
        return getHomeDirGuid();
    }

    @Override
    public String value5() {
        return getIpv4Address();
    }

    @Override
    public StRecordingDeviceRecord value1(Integer value) {
        setRecordingDeviceId(value);
        return this;
    }

    @Override
    public StRecordingDeviceRecord value2(String value) {
        setRecordingDeviceDesc(value);
        return this;
    }

    @Override
    public StRecordingDeviceRecord value3(Integer value) {
        setRecordingDeviceTypeId(value);
        return this;
    }

    @Override
    public StRecordingDeviceRecord value4(String value) {
        setHomeDirGuid(value);
        return this;
    }

    @Override
    public StRecordingDeviceRecord value5(String value) {
        setIpv4Address(value);
        return this;
    }

    @Override
    public StRecordingDeviceRecord values(Integer value1, String value2, Integer value3, String value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    @Override
    public void from(IStRecordingDevice from) {
        setRecordingDeviceId(from.getRecordingDeviceId());
        setRecordingDeviceDesc(from.getRecordingDeviceDesc());
        setRecordingDeviceTypeId(from.getRecordingDeviceTypeId());
        setHomeDirGuid(from.getHomeDirGuid());
        setIpv4Address(from.getIpv4Address());
    }

    @Override
    public <E extends IStRecordingDevice> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StRecordingDeviceRecord
     */
    public StRecordingDeviceRecord() {
        super(StRecordingDevice.ST_RECORDING_DEVICE);
    }

    /**
     * Create a detached, initialised StRecordingDeviceRecord
     */
    public StRecordingDeviceRecord(Integer recordingDeviceId, String recordingDeviceDesc, Integer recordingDeviceTypeId, String homeDirGuid, String ipv4Address) {
        super(StRecordingDevice.ST_RECORDING_DEVICE);

        set(0, recordingDeviceId);
        set(1, recordingDeviceDesc);
        set(2, recordingDeviceTypeId);
        set(3, homeDirGuid);
        set(4, ipv4Address);
    }
}
