/*
 * This file is generated by jOOQ.
 */
package ws.nzen.tracking.splaintime.dao.jooq.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import ws.nzen.tracking.splaintime.dao.jooq.tables.StRecordingDeviceType;
import ws.nzen.tracking.splaintime.dao.jooq.tables.records.StRecordingDeviceTypeRecord;


/**
 * Computer; phone
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StRecordingDeviceTypeDao extends DAOImpl<StRecordingDeviceTypeRecord, ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StRecordingDeviceType, Integer> {

    /**
     * Create a new StRecordingDeviceTypeDao without any configuration
     */
    public StRecordingDeviceTypeDao() {
        super(StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE, ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StRecordingDeviceType.class);
    }

    /**
     * Create a new StRecordingDeviceTypeDao with an attached configuration
     */
    public StRecordingDeviceTypeDao(Configuration configuration) {
        super(StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE, ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StRecordingDeviceType.class, configuration);
    }

    @Override
    public Integer getId(ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StRecordingDeviceType object) {
        return object.getRecordingDeviceTypeId();
    }

    /**
     * Fetch records that have <code>RECORDING_DEVICE_TYPE_ID BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StRecordingDeviceType> fetchRangeOfRecordingDeviceTypeId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RECORDING_DEVICE_TYPE_ID IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StRecordingDeviceType> fetchByRecordingDeviceTypeId(Integer... values) {
        return fetch(StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_ID, values);
    }

    /**
     * Fetch a unique record that has <code>RECORDING_DEVICE_TYPE_ID = value</code>
     */
    public ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StRecordingDeviceType fetchOneByRecordingDeviceTypeId(Integer value) {
        return fetchOne(StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_ID, value);
    }

    /**
     * Fetch records that have <code>RECORDING_DEVICE_TYPE_DESC BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StRecordingDeviceType> fetchRangeOfRecordingDeviceTypeDesc(String lowerInclusive, String upperInclusive) {
        return fetchRange(StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_DESC, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>RECORDING_DEVICE_TYPE_DESC IN (values)</code>
     */
    public List<ws.nzen.tracking.splaintime.dao.jooq.tables.pojos.StRecordingDeviceType> fetchByRecordingDeviceTypeDesc(String... values) {
        return fetch(StRecordingDeviceType.ST_RECORDING_DEVICE_TYPE.RECORDING_DEVICE_TYPE_DESC, values);
    }
}
